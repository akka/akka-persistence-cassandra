language: scala
sudo: true
dist: trusty

services:
  - docker

before_install:
  # make comparing to origin/master work
  - git remote set-branches --add origin master && git fetch
  # fetch full history for correct current and previous version detection
  - git fetch --unshallow
  # using jabba for custom jdk management
  - curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.1/install.sh | bash && . ~/.jabba/jabba.sh
  - jabba install adopt@~1.8-0
  - jabba install adopt@~1.11-0

before_script:
  - unset _JAVA_OPTIONS

jobs:
  include:
    - stage: check
      script: sbt -jvm-opts .jvmopts-travis scalafmtCheckAll || { echo "[error] Unformatted code found. Please run 'scalafmtAll' and commit the reformatted code."; false; }
      name: Code style check (fixed with `sbt scalafmtAll`)
    - script: sbt -jvm-opts .jvmopts-travis scalafmtSbtCheck || { echo "[error] Unformatted sbt code found. Please run 'scalafmtSbt' and commit the reformatted code."; false; }
      name: Build code style check (fixed with `sbt scalafmtSbt`)
    - script: sbt -jvm-opts .jvmopts-travis ++2.13.1 Test/compile
      name: Compile all tests (with Scala 2.13)
    - script: sbt -jvm-opts .jvmopts-travis unidoc
      name: Create all API docs
    - script: sbt -jvm-opts .jvmopts-travis docs/paradox
      name: Create site with Paradox

    - stage: test
      script: jabba use adopt@~1.8-0 && java -version && docker-compose up -d cassandra && sbt -jvm-opts .jvmopts-travis +test
      name: Run all tests with Jdk 8
    - script: jabba use adopt@~1.11-0 && java -version && docker-compose up -d cassandra && sbt -jvm-opts .jvmopts-travis +test
      name: Run all tests with Jdk 11

    - stage: whitesource
      name: White Source
      script: git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH" && sbt -jvm-opts .jvmopts-travis whitesourceCheckPolicies whitesourceUpdate

    - stage: publish
      script: openssl aes-256-cbc -K $encrypted_fb56f898a62a_key -iv $encrypted_fb56f898a62a_iv -in .travis/sign_key.enc -out sign_key -d && gpg --import sign_key && sbt -jvm-opts .jvmopts-travis +publish
      name: Publish artifacts

    - script: eval "$(ssh-agent -s)" && cp .travis/id_rsa /tmp/id_rsa && chmod 600 /tmp/id_rsa && ssh-keygen -p -P "$DEPLOY_PASSPHRASE" -N "" -f /tmp/id_rsa && ssh-add /tmp/id_rsa && sbt -jvm-opts .jvmopts-travis docs/publishRsync
      name: Publish documentation

    - script: jabba use adopt@~1.11-0 && java -version && docker-compose up -d cassandra && ./testLatestAkkaSnapshot.sh
      name: "Run against latest Akka snapshot"
      if: type = cron

stages:
  # runs on master commits and PRs
  - name: check
    if: NOT tag =~ ^v

  # runs on master commits and PRs
  - name: test
    if: NOT tag =~ ^v

  # runs on main repo master commits or version-tagged commits
  - name: whitesource
    if: repo = akka/akka-persistence-cassandra AND ( ( branch = master AND type = push ) OR tag =~ ^v )

  # runs on main repo master commits or version-tagged commits
  - name: publish
    if: repo = akka/akka-persistence-cassandra AND ( ( branch = master AND type = push ) OR tag =~ ^v )


after_failure:
  - docker-compose logs

before_cache:
  - find $HOME/.ivy2/ -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt   -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt
    - $HOME/.jabba/jdk

env:
  global:
    # encrypt with: travis encrypt WHITESOURCE_PASSWORD=...
    - secure: "n7Rn9Qn8GtMzlwJOsixSlKA5dTvtRoihJB4m5QdzWwjo9S3ZW+Q4ce3JT8/ve5Pj6/3b/hOi/YeLoyuHjTAfzZ1ghy+h0rgJA36n1JpyfBOqKW4PGhp8neJPleoa+7bGyG9OUiXt+5ahPng22+P2pGRO6QnX/n+eoHbxtjGc8un2I2yVj/JYJH1ZxfvbLuxFf3hdquEgY2Ety7JF73dUDpL5cEvKrXuUKb00hRXsBQO1v/9otRUlt7tH0ko/Ko3pqEqag0ilT2dYiNk85Zz9l2bwlMoNsfB55Q5jYSvSkDxEq5Olyg+ffk7UIZllIZ3fsXDQRVfqXcKAZN/tz1vFxzLUoVYqkgEI4sgQLmDwI7LtO+mbQPDDiHmKDy00uWI3TV4lUNUJ9isaffbMNH+OMnut4O/q4l6wBgCyveO56oTxhDiLizGUjsYct6LIr4WG2VOBkYbPdJoYjoGn/53BhB5JobnunvjYAmgQ2yqWvjEQbu6lQzz58r25lqTAMDR9s5ffwV3X5dk7VHdEue6kT7FKa7THlJnaDWYEuMGo59UuJm9hOPDZLGEzRY7X5VYNKZAxCEk+kxzh3rtAK9X0ByUvQ+yAfBgcruyKPLT6Y+d+Fbql4C+uB2SFPsGHmTkF1ThLmDyd4dQ68/I2I+4RtGb1k/5oSa7p6jT/kiEDC6s="
    # encrypt with: travis encrypt DEPLOY_PASSPHRASE=...
    - secure: "KzAhc0NqxpltrYXG0jikQ7X1jYdOqXMVfXjMAhzAg7RBQ/O9UQuIjD6Q4//6GNHg0rPnzKglWdkRgN1Ha8zRaW/PrRXu9FKVual6ypP4auqmgtHjVNbPHMftkRQn4RzFozMUsaM2nknveSeth24lFcBA2GrPf5ySMfcUJ+hqGENoOJFKK2e5PO0lBe+Kl3jYxxM8xJCp5lEWQ2utHE5cwJzFuXfE2IgbInavPGQHua/UbNthdnwTjEyh9bobNWEzcj9wzh9tsUUwNpbQIw42Bg0UsDP9fcQkqPW5MGjXwyM/uZ5VuTFtOfED2wrgkvccvJTek8wejU8jdHrpK/YfwZWagKmPeS7DXUtPfzCs0WF7I4m2GRFZf8+pUwZaU/kMcm5hpiM/ay7eumNBo5UwRknfvYzV9hC5y7bcYy5OtDdxd2mJ8Pu9GYMTKYMiYrOorkdDSPekG4bUofP7NI9xePoVJEQVOMM/MKBP0T9ryJuWRDDpBBkMCzLqBHHEwRkh9Ft5p8RFTO33MMCooNlcRP/THHJu6ajGj+yL5+JV1Tn6R6Py0kIIzMw+YzlPQ1JZqSRpJ0Znat3l4Dlxz2ULn45x2oUNKGGpPWBiE8FhbyuSUQ4m/efwwrTZ+gMFv+6LVjYEqYy6umXj4N+3XkZsu5ZXZqd49FaitJfcH5ApQ/w="
    # encrypt with: travis encrypt BINTRAY_USER=...
    - secure: "bgFT3+UC15qsWsAM2RIGKjUrdyzpvqMHDfkDm8kulkYqhcNzBjKaL3rxVJkjA3qO7F9OAm5pidoZWTXZKcg64vOC3+AD3WL94kIevKK0TI2nsnYTjiElpG8zoxgakEVRfqJX3BA2kMCr2Xwrit0cOkbUW4T9cduMh0AIHAfojNLvHifboIcWKP7Kchp4gOuf1FVVdGI8Hzh+H57MnCER9b7HG/ivKJDnfZkD9VjsG278rdkFA9MVz+HWJ0EKr2/Iql8iAkKplimamJnc68zcAw15vR2Twf1IZdA9vks4hFM90zRtnn89VLQOswTz6nRXChupoyquoYcCNKdaC9d3qEFW9XWeBf7H4NstThFNFY9Ot4uaYtqOX0AAPe9Bu6BQg71TlX2k1TOTcM+h2VhVMzkWNgNq1laYSOOxQbXDR9dVlMkeG0tyuJipCxq67DaF3b+xlGwVByc1ZDjKkFjyvwGllCkjp62bjtIbYqbKQjRcHGZS8ffMqfQD+A9uom8Psa2B13P7Rq6gxR7Gb9U13z8m743yUcbNSTY1EgF7YC/F7rdJZsRVnj5eex42nq186sUFp7gJVOvTP8so9qpjsYL4fHBVzHibI4kRyrfPkIo4uSgvYXqtdGV+BWQtNkS9DtRSYMmcHx4fVu0p+EnGmEzakwNJPT//0ln8LBuNHgI="
    # encrypt with: travis encrypt BINTRAY_PASS=...
    - secure: "dASp4DvWoUAviDyTdcFzziBXJgWfdHzRfH+aywQcF3/2cNbjXIRu4NVqN6x39NqgONIhtk1CCDADtqShv79uYVnsR6i1OZ0zvz20wW926cJp0oXO/PDnCNoVD+HGqr6RyS40jlOvGZBbPykRjcWOZ5CWr50n+Tiatyd99sPe6L/c48NOBbGkxgvy9uv2Px2b6r6mAg8IxwEKOxn5buBVxnWtrwBycaDsxhjHdl6AXF4nfhKzO4T/yS20irds9+/AuhuD5gEvm/nscVh01HEpYh59bpjWOdChGbjQzaaHzjf4Xo1q9+DADXBKZp8OpX+4QEV/oGC6tHBix+TX47azHK3ffjaARKVO8g6r3NGY3DBySF+EKAky+fE/U3nQ6wjQ/fa9JwW1HQlTw0AD57ELzFU7e49P8d/NmbHisqv//d1NWSOOMyIW1KPX3R65CzYPWr1vk62ueKRg7YhfJ634VoGNZHM0vWFOxnPwXj0ixoQTRR+4w4BDPA//bAK5ruZLYcM5C3FqdbRBFbAbrPVpbRrb1UYxMSnEOeOV+BbnRyF606vvkYxoFsqpCt2tq291aiW6b5ee+kuEJVsxVOcw7PUBt3GN8TL+wV4RBYuEG2RLNn7zCk5WHE5+/RPfkMLq3lSZweQSh8h2fh+SJBwLwPDoSLi3ZjnQkG/t6YXwFVI="

# safelist
branches:
  only:
    - master
    - release-0.x
    - release-0.50
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
