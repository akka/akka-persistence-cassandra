language: scala
sudo: true
dist: trusty

services:
  - docker

before_install:
  # make comparing to origin/master work
  - git remote set-branches --add origin master && git fetch
  # fetch full history for correct current and previous version detection
  - git fetch --unshallow
  # using jabba for custom jdk management
  - if [ ! -f ~/.jabba/jabba.sh ]; then curl -L -v --retry 5 -o jabba-install.sh https://raw.githubusercontent.com/shyiko/jabba/0.11.2/install.sh && bash jabba-install.sh; fi
  - . ~/.jabba/jabba.sh
  - jabba install adopt@~1.8-0
  - jabba install adopt@~1.11-0

before_script:
  - unset _JAVA_OPTIONS

jobs:
  include:
    - stage: check
      script: sbt -jvm-opts .jvmopts-travis verifyCodeStyle
      name: "Code style check. Run locally with: sbt verifyCodeStyle"
    - script: sbt -jvm-opts .jvmopts-travis ++2.13.1 Test/compile
      name: Compile all tests (with Scala 2.13)
    - script: sbt -jvm-opts .jvmopts-travis unidoc
      name: Create all API docs
    - script: sbt -jvm-opts .jvmopts-travis docs/paradox
      name: Create site with Paradox

    - stage: test
      script: jabba use adopt@~1.8-0 && java -version && docker-compose up -d cassandra && sbt -jvm-opts .jvmopts-travis +test
      name: Run all tests with Jdk 8
    - script: jabba use adopt@~1.11-0 && java -version && docker-compose up -d cassandra && sbt -jvm-opts .jvmopts-travis +test
      name: Run all tests with Jdk 11
    - script: jabba use adopt@~1.11-0 && java -version && docker-compose up -d cassandra && ./testLatestAkkaSnapshot.sh
      name: "Run against latest Akka snapshot"
      if: type = cron
    - script: jabba use adopt@~1.11-0 && java -version && docker-compose up -d cassandra2 && sbt -jvm-opts .jvmopts-travis "testOnly -- -l RequiresCassandraThree"
      name: "Run against Cassandra 2.2"
      if: type = cron

    - stage: whitesource
      name: White Source
      script: git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH" && sbt -jvm-opts .jvmopts-travis whitesourceCheckPolicies whitesourceUpdate

    - stage: publish
      script: openssl aes-256-cbc -K $encrypted_fb56f898a62a_key -iv $encrypted_fb56f898a62a_iv -in .travis/sign_key.enc -out sign_key -d && gpg --import sign_key && sbt -jvm-opts .jvmopts-travis +publish
      name: Publish artifacts

    - script: eval "$(ssh-agent -s)" && cp .travis/id_rsa /tmp/id_rsa && chmod 600 /tmp/id_rsa && ssh-keygen -p -P "$DEPLOY_PASSPHRASE" -N "" -f /tmp/id_rsa && ssh-add /tmp/id_rsa && sbt -jvm-opts .jvmopts-travis docs/publishRsync
      name: Publish documentation

stages:
  # runs on master commits and PRs
  - name: check
    if: NOT tag =~ ^v

  # runs on master commits and PRs
  - name: test
    if: NOT tag =~ ^v

  # runs on main repo master commits or version-tagged commits
  - name: whitesource
    if: repo = akka/akka-persistence-cassandra AND ( ( branch = master AND type = push ) OR tag =~ ^v )

  # runs on main repo master commits or version-tagged commits
  - name: publish
    if: repo = akka/akka-persistence-cassandra AND ( ( branch = master AND type = push ) OR tag =~ ^v )


after_failure:
  - docker-compose logs

before_cache:
  - find $HOME/.ivy2/ -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt   -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt
    - $HOME/.jabba

env:
  global:
    # encrypt with: travis encrypt --pro WHITESOURCE_PASSWORD=... 
    - secure: "InIVb2M8beewAql4wgqsnOnlMNFpJf9uRVuaSZG8m0lIJGsF9XvciqUZiLyPDMjPtXvnsRNaAAe+EzboQ/fdu8yAN8ZrnR3qu1AWZckyY5wI/ycAyxSFW8RwaLcKidnIYbda3jHce3iNSPcujy/2qPEx/isPvw799BYmkHsPD4FXUMVa+eC6rgv686HzWqkIBd9dYho9GCuXWfrd68GlwhNjgjEIytfGGrm6b6+105do/D+HycQ1+Q9tfoeUYOW3IEtoX8W9z+c9NeFxSxfo45rR94F/Omxt8XYjzTjHdZLjxW0r+cRjTK2/zxZFerctZlCH8WPpNzZ0d1O0b1uLiezUGy2E/LDezH+ZYezByMbgCEBRwXE0xxJ7iInHDeqameacBqjwgAeK+MxE5YYEpNRCh601WE6dO2v74iGpnFm4eKLIvvQazVKsRzAED3DK6R8QBOjj232h6xyCYrpEsKn8b/7vwy3tepMgicjWqFYsMX+sNVOfAKUkiBt/pS88mOr6DICA5le39Vvwq5f0UHflsu+RG2zDRpsnMaxicdA+WXsCFYjSBiF6ukY8iGVLByjGjAUTbKaoVO7zfql87R0MuqyzkPmysbhcX3zJSvb2d+M/ZLryUNdSArog3sAI9TU8tZWvWsDuGTnH28/vJ5cvqbruKry441ODv5g8v28="
    # encrypt with: travis encrypt --pro DEPLOY_PASSPHRASE=...
    - secure: "OtUii5z56vdrpH9oj2YhFC8r7ypXUi7GDaDyj0X+SjTyOMmKKwqp8z9J+PrwJBr6oJ3azBzbXDE72P7Y296WcZAw5Ac3zLN3zdkMpOdDGuYH8pxp4ynvC56g1qPUbJsK6zfYvzfT2pGZA0WDhz1dB2i4TZZDPtfaoktUMJSgk03TZOmfaQwbx2t5fgN6/ntimQ+F0Gjp3ZIXbUJldpVMbpDOeCDe+l/GyRivnM3t9ny4SUAMJcLlonvbsZG6ilL4Clssd5kFAfG4JsPeAPU2NorEyBRZx/oSQMFH+DzexNa5Wavru6xzmu2/7v/EdRhXJNn2EY/BBjHzC3RtT2Mh6fprGuJ7qT21F/W5j00eNMP1AdQRGgMovQEEu69mvJVytLAMtnxBl+BYi1SLRw9fL6frW1flZ8AEa74wlnUEW87odYeoGVXh2rCGoFuAmdPGyw4hzo7w+dy9FobV9aund1a0OWTq+utzqoUdwxoHUV0UIL8JYlE+u3bcdlwaoKc9XMEm16fe/7zhmuyOY3HQEH4eoTPrRtOJSQ7tEj9uDPX56xKlK1NliHrVmviSrlEFRSQvIvRVjOezFhD0bVmydMKbIENqkSfDYehfDn/Y33RY5BuncRrzuMTLcfRzTr1lZNHH53q+XJxFEyGZe0ZZP7f2eoBaKLvlt034FKmVf54="
    # encrypt with: travis encrypt --pro BINTRAY_USER=...
    - secure: "pjOz1s3okEcaN/XmLg/gsvENF4EsxJxWs+Ac8wUxcU+mYcn75JTKEs5UC5sfUCsBDpDeFpGrDwarrbD3Adyc3eP9m7IiP9rcDuqrWaWhpQci1a/ixzgJYluwVc0iTv/OzWJPy97sJ3rPsTLD6wOTghz2x82LnkABYnRm2eseXuxCIIINOt97EJs0bgbnu/grRWcdlHgKj+0RJUvSgDtZgI5+yUmof/xhzMQ9ogXIQUzu6sBvPj8b9eOePRgDRLFpezrrzWYovE27E8NNHdCl24UYsTBCahYlcLAuRf0W7AgI4Tj+frMdydgAeObkjX4FCWZIhyNG2GVc8x/lVyYwCcg1ZH4Zym1qHfdREOfTKB8ypmvgZGBQaq/aKTNLNDCIbuAFt9nAwcD6Ziu612MqSVAZW/E0m36b8Z3M2gkbW2pHZiLh5qi97KTUehKZCu/C59grZEjpjd8Dm92D8O4l+G4aWKRWOOAyyqh7j+pI9ZOq4sm2q7ycH1DgOyReUh5MS1q93kf8aPUKw27SEF2KQ7Xm9+T4Zmj6L9QTrMDzeRFhRVrwOuuSvWPEFBcVgzYTZ3Zz9w6IIJX8v/RGPXqu4DyweZCRDT65CwrvcQTvrh9cs+lcHHtuDCvtTpsFHIHvN4gDs/eC+kIIchVIsRE94BHzS7UFg22ZPXW2WXDo90M="
    # encrypt with: travis encrypt --pro BINTRAY_PASS=...
    - secure: "i8g1W7Fqbh9XkkpmZuhQy6862z7fzGrPAKZFiQB/xvCXKofRPvESrj89YhG1r5ifj5/hgeNe77JIbELyrU2Nk8Xot1c8LusqO9tujmJcD2+V/Huxn07CGNCHngcsG+7DRNwsYypm+DMSaxy+cxdFMcPG4EryRVaoRd0wRcPS6Xfns0zngqCMb7BJThC5e/GPM3pW6jgwsP7IW+9n7MiHzUAwI172auiYgNYOT6EgjXS+Yj6mEr0meka6IMeM7CQMipeQCD0NpFnmjEp8OguBcyyty8Ovf1BoPQwt+KYtv3jEAWfc6enBULr1DjrKMQiOeig18/MPRgTJP7Po7n6sQgvovn3BqxffOgFY/+IMLeB7gT6bvBCzm1vN5xx+nXf/EXhBEUYYnBXbtj2XKqi47MLuLtju9fAmlooy6iTmnSrmQlaJI12OjLo6vx26Q0UWnHeGlj7iro+254mKv02HiuXu1WqBwcA9E+lFkTT9vF0xx0uhzBclKbfgHJLfnsylMAQ5KwvX8re1RN9QISUJzLIuLfnWLex9ATzL7WoJcolyTONEk9+Pszxi8AlIvo2tJSWiKYrkKgRgYMrFwUxfHvPN7HddCZl37sykkY1XmVeXj2s3tnqAYtZdYx8KVezIuAxD75ph6dfToCvoe2qr3fcOfyQAFnR3YVfMk6miShQ="

# safelist
branches:
  only:
    - master
    - release-0.x
    - release-0.50
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
