cassandra.example {

  # number of processors, will each take tags 1/n of the tags
  processors = 10

  # number of tags will be processors * this
  tags-per-processor = 5

  # number of persistence ids
  persistence-ids = 1000

  # load tick duration
  load-tick-duration = 1s

}

datastax-java-driver {
  advanced {
    # reconnect to c* if down when app is started
    reconnect-on-init = true
  }
}

akka {
  loglevel = DEBUG
  actor {
    provider = "cluster"
    serialization-bindings {
      "akka.persistence.cassandra.example.CborSerializable" = jackson-cbor
    }
  }

  persistence.journal {
    plugin = "akka.persistence.cassandra.journal"
    # to create the schema
    auto-start-journals = ["akka.persistence.cassandra.journal"]
  }
  persistence.snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

  persistence {
    cassandra {
      journal {
        keyspace-autocreate = true
        tables-autocreate = true
      }

      snapshot {
        keyspace-autocreate = true
        tables-autocreate = true
      }

      query {
        refresh-interval = 2s
      }

      events-by-tag {
        // for lower latency
        eventual-consistency-delay = 25ms
        flush-interval = 25ms
        pubsub-notification = on
      }
    }
  }
}
